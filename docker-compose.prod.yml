version: '3.9'

services:
  mongo:
    container_name: mongo_container
    image: 'mongo'
    volumes:
      - mongo-data:/data/db
    networks:
      - queue-net
    env_file: 
      - ./.env.production
    command: mongod --bind_ip_all
    restart: always

  client:
    container_name: client
    build:
      context: ./client
      dockerfile: docker/production/Dockerfile
    ports:
      - '5173:5173'
    restart: always
    env_file: 
      - ./.env.production
    volumes:
      - ./client/src:/usr/src/app/src
      - ./client/package.json:/usr/src/app/package.json
    depends_on:
      - server
    networks:
      - queue-net

  server:
    container_name: server
    build:
      context: ./server
      dockerfile: docker/production/Dockerfile
    ports:
      - '5000:5000'
    depends_on:
      - mongo
      - cache
    env_file: 
      - ./.env.production
    volumes:
      - ./server/src:/usr/src/app/src
      - ./server/package.json:/usr/src/app/package.json
      - ./server/nodemon.json:/usr/src/app/nodemon.json
    networks:
      - queue-net

  cache:
    container_name: cache_container
    image: redis:latest
    restart: always
    ports:
      - '6379:6379'
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - cache:/data
    networks:
      - queue-net

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    ports:
      - '81:80'
      - '443:443'
    volumes:
      - ./nginx:/usr/src/app
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/letsencrypt/live/www.dowellcube.uxlivinglab.online/fullchain.pem:/etc/letsencrypt/live/www.dowellcube.uxlivinglab.online/fullchain.pem:ro
      - /etc/letsencrypt/live/www.dowellcube.uxlivinglab.online/privkey.pem:/etc/letsencrypt/live/www.dowellcube.uxlivinglab.online/privkey.pem:ro
    restart: always
    networks:
      - queue-net
    depends_on:
      - server
      - client
  
networks:
  queue-net:
    driver: bridge

volumes:
  mongo-data:
  cache: