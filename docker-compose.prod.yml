version: '3.9'

services:
  mongo:
    container_name: dowellcubes_mongo_container
    image: 'mongo'
    volumes:
      - dowellcubes_mongo-data:/data/db
    networks:
      - dowellcubes_net
    ports:
      - '27018:27017'  # Changed from 27017 to avoid conflicts
    env_file: 
      - ./.env.production
    command: mongod --bind_ip_all
    restart: always

  client:
    container_name: dowellcubes_client_container
    build:
      context: ./client
      dockerfile: docker/production/Dockerfile
    ports:
      - '8082:5173'  # Changed from 8081 to 8082 to avoid conflicts
    restart: always
    env_file: 
      - ./.env.production
    volumes:
      - ./client/src:/usr/src/app/src
      - ./client/package.json:/usr/src/app/package.json
    depends_on:
      - server
    networks:
      - dowellcubes_net

  server:
    container_name: dowellcubes_server_container
    build:
      context: ./server
      dockerfile: docker/production/Dockerfile
    ports:
      - '5000:5000'  # Keep 5000 for backend
    depends_on:
      - mongo
      - cache
    env_file: 
      - ./.env.production
    restart: always
    volumes:
      - ./server/src:/usr/src/app/src
      - ./server/package.json:/usr/src/app/package.json
      - ./server/nodemon.json:/usr/src/app/nodemon.json
    networks:
      - dowellcubes_net

  cache:
    container_name: dowellcubes_cache_container
    image: redis:latest
    restart: always
    ports:
      - '6380:6379'  # Changed from 6379 to avoid conflicts
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - dowellcubes_cache:/data
    networks:
      - dowellcubes_net

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: dowellcubes_nginx
    ports:
      - '8082:80'  # Changed from 8081 to 8082 to avoid conflicts
    volumes:
      - ./nginx:/usr/src/app
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    restart: always
    networks:
      - dowellcubes_net
    depends_on:
      - server
      - client
  
networks:
  dowellcubes_net:
    driver: bridge

volumes:
  dowellcubes_mongo-data:
  dowellcubes_cache: